---
import Layout from "./Layout.astro";
import "../styles/editorial.css";

export interface Props {
    title: string;
    description?: string;
    author?: string;
    date?: string;
    readingTime?: string;
    tags?: string[];
    chapterLabel?: string;
}

const {
    title,
    description,
    author = "Eric Brookfield",
    date,
    readingTime,
    tags = [],
    chapterLabel
} = Astro.props;

const formattedDate = date ? new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
}) : '';
---

<Layout title={title} description={description}>
    <div class="reading-progress">
        <div class="reading-progress-bar" id="progress-bar"></div>
    </div>

    <main class="editorial-container">
        <article class="article-wrapper fade-in-up">
            <header class="article-header">
                {chapterLabel && (
                    <span class="chapter-label">{chapterLabel}</span>
                )}
                <h1 class="headline headline-lg">{title}</h1>
                {description && (
                    <p class="subheadline">{description}</p>
                )}
                <div class="byline">
                    <span>By {author}</span>
                    {date && (
                        <>
                            <span class="separator">•</span>
                            <span>{formattedDate}</span>
                        </>
                    )}
                    {readingTime && (
                        <>
                            <span class="separator">•</span>
                            <span>{readingTime} min read</span>
                        </>
                    )}
                </div>
                {tags.length > 0 && (
                    <div class="article-tags">
                        {tags.map(tag => (
                            <span class="tag">{tag}</span>
                        ))}
                    </div>
                )}
            </header>

            <div class="article-content">
                <slot />
            </div>

            <footer class="article-footer">
                <div class="section-divider">
                    <span>✦</span>
                </div>
                <nav class="article-nav">
                    <a href="/" class="nav-link">← Back to Home</a>
                    <a href="/archive" class="nav-link">View All Posts →</a>
                </nav>
            </footer>
        </article>
    </main>
</Layout>

<style>
    .editorial-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 4rem 2rem;
    }

    .article-wrapper {
        background: var(--color-background);
    }

    .article-tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: 1rem;
    }

    .tag {
        padding: 0.25rem 0.75rem;
        background: var(--editorial-surface, rgba(255, 255, 255, 0.05));
        border: 1px solid var(--editorial-border, rgba(255, 255, 255, 0.1));
        border-radius: 2rem;
        font-size: 0.875rem;
        color: var(--editorial-gray, #8a8577);
        transition: all 0.2s ease;
    }

    .tag:hover {
        background: var(--color-primary);
        color: var(--color-background);
        border-color: var(--color-primary);
    }

    .article-content {
        font-family: 'Crimson Text', Georgia, serif;
        font-size: 1.25rem;
        line-height: 1.8;
        color: var(--color-text);
    }

    .article-content :global(p) {
        margin-bottom: 1.5rem;
    }

    .article-content :global(p:first-of-type) {
        font-size: 1.4rem;
        line-height: 1.7;
        font-weight: 400;
    }

    .article-content :global(h2) {
        font-family: 'Playfair Display', serif;
        font-size: 2.5rem;
        font-weight: 700;
        margin: 3rem 0 1.5rem;
        color: var(--editorial-cream, var(--color-text));
    }

    .article-content :global(h3) {
        font-family: 'Playfair Display', serif;
        font-size: 1.875rem;
        font-weight: 700;
        margin: 2rem 0 1rem;
        color: var(--editorial-cream, var(--color-text));
    }

    .article-content :global(blockquote) {
        font-family: 'Playfair Display', serif;
        font-size: 1.75rem;
        font-style: italic;
        margin: 2rem 0;
        padding: 1.5rem 2rem;
        border-left: 4px solid var(--color-primary);
        background: var(--editorial-surface, rgba(255, 255, 255, 0.03));
        color: var(--editorial-cream, var(--color-text));
    }

    .article-content :global(code) {
        font-family: 'SF Mono', Monaco, 'Inconsolata', 'Fira Code', monospace;
        font-size: 0.9em;
        padding: 0.2em 0.4em;
        background: var(--editorial-surface, rgba(255, 255, 255, 0.05));
        border: 1px solid var(--editorial-border, rgba(255, 255, 255, 0.1));
        border-radius: 3px;
    }

    .article-content :global(pre) {
        margin: 2rem 0;
        padding: 1.5rem;
        background: var(--editorial-surface, rgba(255, 255, 255, 0.03));
        border: 1px solid var(--editorial-border, rgba(255, 255, 255, 0.1));
        border-radius: 8px;
        overflow-x: auto;
    }

    .article-content :global(pre code) {
        background: transparent;
        border: none;
        padding: 0;
        font-size: 0.95rem;
    }

    .article-content :global(ul),
    .article-content :global(ol) {
        margin: 1.5rem 0;
        padding-left: 2rem;
    }

    .article-content :global(li) {
        margin-bottom: 0.5rem;
    }

    .article-content :global(hr) {
        margin: 3rem 0;
        border: none;
        height: 1px;
        background: var(--editorial-border, rgba(255, 255, 255, 0.1));
    }

    .article-footer {
        margin-top: 4rem;
    }

    .article-nav {
        display: flex;
        justify-content: space-between;
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--editorial-border, rgba(255, 255, 255, 0.1));
    }

    .nav-link {
        color: var(--color-primary);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .nav-link:hover {
        color: var(--color-primary-dark);
        transform: translateX(4px);
    }

    .nav-link:first-child:hover {
        transform: translateX(-4px);
    }

    @media (max-width: 768px) {
        .editorial-container {
            padding: 2rem 1rem;
        }

        .article-content {
            font-size: 1.125rem;
        }

        .article-content :global(p:first-of-type) {
            font-size: 1.25rem;
        }

        .article-content :global(h2) {
            font-size: 2rem;
        }

        .article-content :global(blockquote) {
            font-size: 1.5rem;
            padding: 1rem 1.5rem;
        }

        .article-nav {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }
    }
</style>

<script>
    // Reading progress bar
    function updateProgressBar() {
        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
        const scrolled = (winScroll / height) * 100;
        const progressBar = document.getElementById("progress-bar");
        if (progressBar) {
            progressBar.style.width = scrolled + "%";
        }
    }

    window.addEventListener('scroll', updateProgressBar);
    window.addEventListener('load', updateProgressBar);
</script>
